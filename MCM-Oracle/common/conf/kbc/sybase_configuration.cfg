<SYBASE_PARAMETERS>

    <"lock shared memory">
       param_descr="Lock shared memory"
       category=setup
       kbc_value="1"
       kbc_descr=""
       mx_value=""
       mx_descr=""
       check_value=1
    </"lock shared memory">

    <"housekeeper free write percent">
       param_descr="Housekeeper free write"
       category=setup
       kbc_value="75"
       kbc_descr=""
       mx_value=""
       mx_descr=""
       check_value=1
    </"housekeeper free write percent">

    <"enable housekeeper GC">
       param_descr="Housekeeper GC"
       category=setup
       kbc_value="5"
       kbc_descr=""
       mx_value=""
       mx_descr=""
       check_value=1
    </"enable housekeeper GC">

    <"i/o polling process count">
       param_descr="IO polling process count"
       category=setup
       kbc_value="20"
       kbc_descr=""
       mx_value=""
       mx_descr="In order to provide more precise statistics to the optimizer it is recommended to increase this parameter up to 500. This will help the optimizer cost correctly queries on large tables."
       check_value=1
    </"i/o polling process count">

    <"runnable process search count">
       param_descr="RPSC"
       category=setup
       kbc_value="2000"
       kbc_descr="specifies the number of times an engine loops while looking for a runnable task before relinquishing the CPU to the operating system"
       mx_value=""
       mx_descr=""
       check_value=1
    </"runnable process search count">

    <"number of histogram steps">
       param_descr="Histogram steps"
       category=optimizer
       kbc_value=""
       kbc_descr=""
       mx_value="500"
       mx_descr="In order to provide more precise statistics to the optimizer it is recommended to increase this parameter up to 500. This will help the optimizer cost correctly queries on large tables."
       check_value=1
    </"number of histogram steps">

    <"mnc_full_index_filter">
       param_descr="MNC full index filter"
       category=setup
       kbc_value=""
       kbc_descr=""
       mx_value="3"
       mx_descr="This is another optimizer tuning setting. It will cause ASE 15 to behave like ASE 12.5 when no statistics are available and choose an index which leading column is in the query. It is mandatory."
       check_value=1
    </"mnc_full_index_filter">

    <"enable literal autoparam">
       param_descr="Literal autoparam"
       category=setup
       kbc_value=""
       kbc_descr=""
       mx_value="1"
       mx_descr="The statement cache companion, this setting cause ASE to replace fixed arguments by variable before it compiles or search for a statement in the cache. It is mandatory when ASE 15 is used."
       check_value=1
    </"enable literal autoparam">

    <"print deadlock information">
       param_descr="Deadlock information"
       category=setup
       kbc_value="1"
       kbc_descr="Needed to retrieve deadlock information."
       mx_value="0"
       mx_descr="Although it may be interesting to gather more information about deadlock situation, it is recommended to keep this feature disabled ( 0 ) AS its impact on performance may be high."
       check_value=1
    </"print deadlock information">

    <"row lock promotion HWM">
       param_descr="Lock promotion HWM"
       category=table
       kbc_value=""
       kbc_descr=""
       mx_value="200"
       mx_descr="This set of configuration parameters controls the escalation by ASE of row locks into table locks. The values presented here are the default values. It is mandatory to use those values to avoid locking the table too soon or too late."
       check_value=1
    </"row lock promotion HWM">

    <"row lock promotion LWM">
       param_descr="Lock promotion LWM"
       category=table
       kbc_value=""
       kbc_descr=""
       mx_value="200"
       mx_descr="This set of configuration parameters controls the escalation by ASE of row locks into table locks. The values presented here are the default values. It is mandatory to use those values to avoid locking the table too soon or too late."
       check_value=1
    </"row lock promotion LWM">

    <"row lock promotion PCT">
       param_descr="Lock promotion PCT"
       category=table
       kbc_value=""
       kbc_descr=""
       mx_value="100"
       mx_descr="This set of configuration parameters controls the escalation by ASE of row locks into table locks. The values presented here are the default values. It is mandatory to use those values to avoid locking the table too soon or too late."
       check_value=1
    </"row lock promotion PCT">

    <"lock scheme">
       param_descr="Lock Scheme"
       category=table
       kbc_value=""
       kbc_descr=""
       mx_value="datarows"
       mx_descr="This sets the lock scheme at server level for all create table or select into statements which do not explicitly set it. All MX tables should be created using 'datarows' lock scheme to increase concurrency between processes which share many common tables but access different rows."
       check_value=1
    </"lock scheme">

    <"additional network memory">
       param_descr="Additional network memory"
       category=setup
       kbc_value=""
       kbc_descr=""
       mx_value="formula"
       mx_descr="Processes using packets bigger than the default size will require more memory. Failure to give enough network memory will cause performance degradation. The exact recommended value is number of user connections is calculated as number of buffer per connection (3) * max network packet size (4096) * overhead (1.04 for 64bit servers)."
       check_value=0
    </"additional network memory">

    <"number of user connections">
       param_descr="User connections"
       category=setup
       kbc_value="1200"
       kbc_descr=""
       mx_value="formula"
       mx_descr="( 3 x user sessions + 50) It is important to have enough user connection structures. If the server runs out of this resource, it will refuse new connections and print messages to the log. Each MX client uses usually up to 3 connections. There is also a connection pool used by MX services which has a default maximum of 50 connections. Note that inactive connections are properly closed by MX application tier after a timeout."
       check_value=1
    </"number of user connections">

    <"max network packet size">
       param_descr="Maximum packet size"
       category=network
       kbc_value="32768"
       kbc_descr="Set it to the maximum as murex sets is own defined packed size of 4096 for sessions, 512 for mxml exchange."
       mx_value="4096"
       mx_descr="This setting allow processes to use 4kb network packet size . It is mandatory for all MX versions. No connection will be possible without this because MX processes will set packet size to 4096. It is possible however to use a higher value but it may waste memory."
       check_value=1
    </"max network packet size">

    <"enable DTM">
       param_descr="DTM transaction"
       category=setup
       kbc_value=""
       kbc_descr=""
       mx_value="1"
       mx_descr="This setting enable the use of distributed transactions. It is mandatory for MX.3 as no trade insertion will be possible without this."
       check_value=1
    </"enable DTM">

    <"identity burning set factor">
       param_descr="Identity burning set factor"
       category=table
       kbc_value=""
       kbc_descr=""
       mx_value="5"
       mx_descr="This is a performance tuning parameter present in MX documentation. It allows reservation of identity values using chunks of 5 instead of one at a time."
       check_value=1
    </"identity burning set factor">

    <"optimization goal">
       param_descr="Optimization"
       category=optimizer
       kbc_value=""
       kbc_descr=""
       mx_value="allrows_oltp"
       mx_descr="The optimization goal is new in ASE 15. It limits the number of algorithms evaluated by ASE when it compiles a query. As most of MX SQL queries does not benefit from the extra options used to optimize large reporting select statements, it is recommended to use the oltp goal for fastest compilations."
       check_value=1
    </"optimization goal">

    <"stack size">
       param_descr="Stack size"
       category=memory
       kbc_value=""
       kbc_descr=""
       mx_value="184320"
       mx_descr="The stack size is the area of Adaptive Server memory where user processes keep track of their process context and store local data. Tests showed this value to be adequate for all MX use scenario. It is seldom increased by customer. Using a smaller stack size is not recommended as it could cause queries to abort." 
       check_value=1
    </"stack size">

    <"number of locks">
       param_descr="Locks"
       category=table
       kbc_value="6000000"
       kbc_descr=""
       mx_value="50000"
       mx_descr="As MX uses data row level locking scheme, each process can generate a huge number of lock. Monitoring lock usage using sp_monitorconfig 'number of locks' is important to avoid running out of this resource. If a query can not have a lock structure because none is available, it will fail and send a massage to both the log and the client application."
       check_value=1
    </"number of locks">

    <"number of open databases">
       param_descr="Open databases"
       category=database
       kbc_value="60"
       kbc_descr=""
       mx_value="50"
       mx_descr="This parameter must always be higher than the number of databases on the server ( including system ones ) to avoid performance degradations."
       check_value=1
    </"number of open databases">

    <"number of open indexes">
       param_descr="Open indexes"
       category=index
       kbc_value="50000"
       kbc_descr=""
       mx_value="50000"
       mx_descr="The MX data model is made of thousands of tables and even more indexes. The server will require memory structures for those. Other open objects will be used to store temporary or dynamic tables and procedures. Both parameters can also be monitored using sp_monitorconfig 'all'. ASE will print messages if it is forced to reuse ( and swap to disk ) those structures. An outage of any index will cause a severe performance problem."
       check_value=1
    </"number of open indexes">

    <"statement cache size">
       param_descr="Statement cache"
       category=memory
       kbc_value="400000"
       kbc_descr=""
       mx_value="50000"
       mx_descr="This memory space stores cached statements along with their plan in order to avoid costly multiple compilations of the same query. It should not be enabled without 'enable literal autoparam'"
       check_value=1
    </"statement cache size">

    <"number of open objects">
       param_descr="Open objects"
       category=table
       kbc_value="125000"
       kbc_descr=""
       mx_value="50000"
       mx_descr="The MX data model is made of thousands of tables. Make sure it has an higher value. Use sp_monitorconfig."
       check_value=1
    </"number of open objects">

    <"number of open partitions">
       param_descr="Open partitions"
       category=table
       kbc_value="125000"
       kbc_descr=""
       mx_value="50000"
       mx_descr="In the new version all tables are partitioned even if using only one partition. As indexes and objects, partitions are described in memory structures allocated by this parameter. If ASE needs to reuse them, it will cause performance degradations. It is recommended to keep this value equal to 'number of open objects'."
       check_value=1
    </"number of open partitions">

    <"procedure cache size">
       param_descr="Procedure cache size"
       category=memory
       kbc_value="1000000"
       kbc_descr=""
       mx_value="750000"
       mx_descr="Procedure cache is intensively used by MX. Although the application only explicitly creates only very few procedures, ASE will use a big amount of procedure cache internally ( particularly to handle jdbc calls ). It can be monitored using sp_monitorconfig 'all' and MDA tables in ASE 15."
       check_value=1
    </"procedure cache size">

    <"allocate max shared memory">
       param_descr="Maximum sybase memory"
       category=memory
       kbc_value="1"
       kbc_descr="Allocate maximum memory at startup so the database memory usage cannot grow afterwards, bringing the server into trouble. In order to take advantage of large pages and memory pinning AIX, sybase memory must be allocated at startup."
       mx_value="1"
       mx_descr="This force ASE to reserve all 'max memory' when it starts. It is recommended for performance."
       check_value=1
    </"allocate max shared memory">

    <"max memory">
       param_descr="Allocate sybase memory"
       category=memory
       kbc_value="server-ramdisk-fscache"
       kbc_descr=""
       mx_value=""
       mx_descr="Max memory is the global amount of RAM reserved for ASE. It is best to give ASE all memory which is used neither by the OS nor for tempdb devices."
       check_value=0
    </"max memory">

    <"max parallel degree">
       param_descr="Max parallel degree"
       category=cpu
       kbc_value=""
       kbc_descr=""
       mx_value="1"
       mx_descr="Max parallel degree specifies the server-wide maximum number of worker processes allowed per query. The default value of 1 is mandatory."
       check_value=1
    </"max parallel degree">

    <"max scan parallel degree">
       param_descr="Max scan parallel degree"
       category=cpu
       kbc_value=""
       kbc_descr=""
       mx_value="1"
       mx_descr="Max scan parallel degree specifies the server-wide maximum degree of parallelism. The default value of 1 is mandatory."
       check_value=1
    </"max scan parallel degree">

    <"max query parallel degree">
       param_descr="Max query parallel degree"
       category=cpu
       kbc_value=""
       kbc_descr=""
       mx_value=""
       mx_descr="Max query parallel degree specifies the server-wide maximum number of worker processes allowed per query. The default value of 1 is mandatory."
       check_value=1
    </"max query parallel degree">

    <"number of worker processes">
       param_descr="Worker processes"
       category=cpu
       kbc_value=""
       kbc_descr=""
       mx_value="0"
       mx_descr="This parameter limits the number of processes available to spread one query onto several engines. A value of 0 disable parallelism. It is the default value and the required one."
       check_value=1
    </"number of worker processes">

    <"number of engines at startup">
       param_descr="Engines at startup"
       category=cpu
       kbc_value=""
       kbc_descr=""
       mx_value=""
       mx_descr="It is recommended to give the maximum number of cores to ASE. The OS will give CPU time to other processes as needed anyway. Engine groups and execution classes bound to a specific login can be used to dedicate or limit resources."
       check_value=0
    </"number of engines at startup">

    <"max online engines">
       param_descr="Maximum online engines"
       category=cpu
       kbc_value="number of virtual cpu"
       kbc_descr=""
       mx_value="number of available cores"
       mx_descr=""
       check_value=0
    </"max online engines">

    <"default sortorder id">
       param_descr="Default character set"
       category=setup
       kbc_value="50"
       kbc_descr="charset must be configured to iso_1, use 'sp_helpsort' for full detail"
       mx_value="50"
       mx_descr="mandatory" 
       check_value=1
    </"default sort order id">

    <"total data cache size">
       param_descr="Data cache size"
       category=memory
       kbc_value="info"
       kbc_descr="total of data cache contains statement, procedure and cache configurations"
       mx_value=""
       mx_descr="" 
       check_value=0
    </"total data cache size">

    <"total logical memory">
       param_descr="Total logical memory"
       category=memory
       kbc_value="info"
       kbc_descr="Sybase memory usage, total data cache plus memory used by configuration parameters (value * 2k pages)"
       mx_value=""
       mx_descr="" 
       check_value=0
    </"total logical memory">

    <"i/o batch size">
       param_descr="I/O batch size"
       category=disk
       kbc_value="1500"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"i/o batch size">

    <"number of sort buffers">
       param_descr="Number of sort buffers"
       category=memory
       kbc_value="5000"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"number of sort buffers">
    
    <"disk i/o structures">
       param_descr="disk i/o structures"
       category=disk
       kbc_value="32768"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"disk i/o structures">
    
    <"number of large i/o buffers">
       param_descr="number of large i/o buffers"
       category=disk
       kbc_value="16"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"number of large i/o buffers">

    <"max async i/os per engine">
       param_descr="max async i/os per engine"
       category=disk
       kbc_value="8192"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"max async i/os per engine">

    <"user log cache size">
       param_descr="user log cache size"
       category=memory
       kbc_value="32768"
       kbc_descr="ULC size = 2 * @@maxpagesize"
       mx_value=""
       mx_descr="" 
       check_value=1
    </"user log cache size">

    <"enable monitoring">
       param_descr="enable monitoring"
       category=monitoring L1
       kbc_value="1"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"enable monitoring">

    <"wait event timing">
       param_descr="wait event timing"
       category=monitoring L1
       kbc_value="1"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"wait event timing">

    <"process wait events">
       param_descr="process wait events"
       category=monitoring L1
       kbc_value="1"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"process wait events">

    <"object lockwait timing">
       param_descr="object lockwait timing"
       category=monitoring L1
       kbc_value="1"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"object lockwait timing">

    <"SQL batch capture">
       param_descr="SQL batch capture"
       category=monitoring L1
       kbc_value="1"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"SQL batch capture">

    <"statement statistics active">
       param_descr="statement statistics active"
       category=monitoring L1
       kbc_value="1"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"statement statistics active">

    <"per object statistics active">
       param_descr="per object statistics active"
       category=monitoring L1
       kbc_value="1"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"per object statistics active">

    <"max SQL text monitored">
       param_descr="max SQL text monitored"
       category=monitoring L1
       kbc_value="2048"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"max SQL text monitored">

    <"errorlog pipe active">
       param_descr="errorlog pipe active"
       category=monitoring L0
       kbc_value="1"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"errorlog pipe active">

    <"errorlog pipe max messages">
       param_descr="errorlog pipe max messages"
       category=monitoring L0
       kbc_value="1000"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"errorlog pipe max messages">

    <"deadlock pipe active">
       param_descr="deadlock pipe active"
       category=monitoring L0
       kbc_value="1"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"deadlock pipe active">

    <"deadlock pipe max messages">
       param_descr="deadlock pipe max messages"
       category=monitoring L0
       kbc_value="1000"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"deadlock pipe max messages">

    <"enable stmt cache monitoring">
       param_descr="enable stmt cache monitor"
       category=monitoring
       kbc_value="1"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"enable stmt cache monitoring">

    <"statement pipe active">
       param_descr="statement pipe active"
       category=monitoring L1
       kbc_value="1"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"statement pipe active">

    <"statement pipe max messages">
       param_descr="statement pipe max msg"
       category=monitoring L1
       kbc_value="1000"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"statement pipe max messages">

    <"sql text pipe active">
       param_descr="sql text pipe active"
       category=monitoring L2
       kbc_value="1"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"sql text pipe active">

    <"sql text pipe max messages">
       param_descr="sql text pipe max messages"
       category=monitoring L2
       kbc_value="1000"
       kbc_descr="Number of SQL messages multiplied with the number of engines."
       mx_value=""
       mx_descr="" 
       check_value=1
    </"sql text pipe max messages">

    <"plan text pipe active">
       param_descr="plan text pipe active"
       category=monitoring L2
       kbc_value="0"
       kbc_descr=""
       mx_value=""
       mx_descr="" 
       check_value=1
    </"plan text pipe active">

    <"plan text pipe max messages">
       param_descr="plan text pipe max messages"
       category=monitoring L2
       kbc_value="1000"
       kbc_descr="Number of SQL messages multiplied with the number of engines."
       mx_value=""
       mx_descr="" 
       check_value=1
    </"plan text pipe max messages">

    <"session tempdb log cache size">
       param_descr="session tempdb log cache"
       category=memory
       kbc_value="32768"
       kbc_descr="Number of SQL messages multiplied with the number of engines."
       mx_value=""
       mx_descr="" 
       check_value=1
    </"session tempdb log cache size">

    <"lock hashtable size">
       param_descr="lock hashtable size"
       category=memory
       kbc_value="32768"
       kbc_descr="Number of hash buckets in lock hash table for row, page and table locks."
       mx_value=""
       mx_descr="" 
       check_value=1
    </"lock hashtable size">

    <"global cache partition number">
       param_descr="global cache partition nr"
       category=memory
       kbc_value=""
       kbc_descr="Number of partitions for all data caches - however local values take over from global setting."
       mx_value="32"
       mx_descr="Recommended value to reduce spinlock contention." 
       check_value=1
    </"global cache partition number">

</SYBASE_PARAMETERS>
